/* Write a program to rotate an array elements by kth elements.

Input Format
6
2 3 4 7 6 1
2

Constraints
Input should be an array

Output Format
6 1 2 3 4 7

Sample Input 0
5
5 4 3 2 1
3

Sample Output 0
3 2 1 5 4  */

import java.util.Scanner;

public class ArrayRotation {

    static void reverse(int[] arr, int start, int end) {
        while (start < end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
    }

    static void rotateArray(int[] arr, int k) {
        int n = arr.length;
        k %= n; // If k is greater than array length, take the modulo

        // Reverse the entire array
        reverse(arr, 0, n - 1);

        // Reverse the first k elements
        reverse(arr, 0, k - 1);

        // Reverse the remaining elements
        reverse(arr, k, n - 1);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];

        // Read the array elements
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        int k = scanner.nextInt();
        rotateArray(arr, k);

        // Print the rotated array
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}
___________________________________________________________________________________________________________________________________________________________________

import java.util.Scanner;

public class RotateArray {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt(); // Number of elements
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt(); // Read array elements
        }

        int k = scanner.nextInt(); // Number of positions to rotate

        // Create a new array to store the rotated elements
        int[] rotatedArr = new int[n];

        // Perform the rotation
        for (int i = 0; i < n; i++) {
            int newPosition = (i + k) % n; // Calculate the new position after rotation
            rotatedArr[newPosition] = arr[i];
        }

        // Print the rotated array
        for (int num : rotatedArr) {
            System.out.print(num + " ");
        }
    }
}
